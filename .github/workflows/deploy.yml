name: CI/CD Deploy to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/downloadbotdeploy/downloadbot
            git pull origin main
            docker build -t telegram-bot .
            docker stop tg-bot || true
            docker rm tg-bot || true
            docker run --env-file .env --restart unless-stopped -d --name tg-bot telegram-bot

      - name: Send success notification to Telegram
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.NOTIFY_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.NOTIFY_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="‚úÖ *Deploy —É—Å–ø–µ—à–µ–Ω!* –ë–æ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. \n\nüïí –í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M') \nüîÅ –ö–æ–º–º–∏—Ç: \`${{ github.sha }}\`"

      - name: Send failure notification to Telegram
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.NOTIFY_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.NOTIFY_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ!* \n\nüïí –í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M')"
